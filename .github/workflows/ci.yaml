name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - uses: cachix/cachix-action@v10
        with:
          name: bernardo
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: lint
        run: cachix watch-exec bernardo -- nix develop -c make lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - uses: cachix/cachix-action@v10
        with:
          name: bernardo
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: test
        run: cachix watch-exec bernardo -- nix develop -c make test

  get-pkgs:
    runs-on: ubuntu-latest
    outputs:
      pkgs: ${{ steps.get-pkgs.outputs.pkgs }}
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - id: get-pkgs
        run: echo "::set-output name=pkgs::$(nix flake show --json | jq -c '.packages."x86_64-linux" | keys')"

  build:
    name: build-${{ matrix.pkg }}
    runs-on: ubuntu-latest
    needs: get-pkgs
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.get-pkgs.outputs.pkgs) }}
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - uses: cachix/cachix-action@v10
        with:
          name: bernardo
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: build
        run: |
          cachix watch-exec bernardo -- \
            nix develop .\#packages.x86_64-linux.${{ matrix.pkg }} \
            -c make build
      - name: nix build
        run: |
          cachix watch-exec bernardo -- \
          nix build -L .\#packages.x86_64-linux.${{ matrix.pkg }}
